name: ci/cd deploy remed mutiaa

on:
  push:
    branches:
      - deployment

jobs:
  # build-and-push-docker:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout the code
  #       uses: actions/checkout@v2
  #     - name: Create env file
  #       run: |
  #         echo "${{ secrets.ENV }}" >> .env
  #     - name: Build Docker image
  #       run: docker build -t mutia181/eco_miniproject:2.2.2 .
  #     - name: Docker Hub login
  #       uses: docker/login-action@v1
  #       with: 
  #         username: ${{ secrets.DOCKER_USER }}
  #         password: ${{ secrets.DOCKER_TOKEN }}
  #     - name: Push Docker image
  #       run: docker push mutia181/eco_miniproject:2.2.2

  deploy:
    # needs: build-and-push-docker
    runs-on: ubuntu-latest
    env:
      IMAGE_URI: 'mutia181/eco_miniproject:2.2.2'
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USER }}

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Create PEM file from secret
        run: |
          echo "${{ secrets.EC2_PEM }}" > ec2-key.pem
          chmod 600 ec2-key.pem

      - name: Deploy to EC2
        run: |
          ssh -i ec2-key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << EOF
            # Stop the current container if running
            sudo docker ps -q --filter "name=my-container" | grep -q . && sudo docker stop my-container || true
            sudo docker rm my-container || true

            # Pull the latest image
            sudo docker pull $IMAGE_URI

            # Run the new container
            sudo docker run -d --name my-container -p 8000:8000 $IMAGE_URI
          EOF

      - name: Clean up PEM file
        run: rm -f ec2-key.pem
